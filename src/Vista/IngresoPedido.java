/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.awt.Color;
import java.io.IOException;
import java.time.DateTimeException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.util.converter.LocalDateTimeStringConverter;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.text.DateFormatter;
import org.edisoncor.gui.button.ButtonColoredAction;
import org.edisoncor.gui.panel.Panel;
import restaurante.Categoria;
import static restaurante.Categoria.*;
import restaurante.Factura;
import restaurante.Producto;
import restaurante.Proveedor;

import restaurante.Restaurante;

/**
 *
 * @author User
 */
public class IngresoPedido extends javax.swing.JFrame {
	private Restaurante restaurante;
        private Categoria categoria ;
        private Proveedor proveedor ;
        private int item ;
        private int cantidad = 0;
        private int aa  ;
        private int mm  ;
        private int dd  ;
        private double valorFactura ;
        private int aaf  ;
        private int mmf  ;
        private int ddf  ;
        String matrix[][] ;
        private ArrayList<Producto> productos = new ArrayList<>() ;
        private ArrayList<Producto> ingreso = new ArrayList<>() ;
    /**
     * Creates new form IngresoPedido
     */
    public IngresoPedido(Restaurante restaurante) {
        getContentPane().setBackground(Color.PINK);
    	this.restaurante = restaurante;
        initComponents();
    }
    
    public void actualizarTabla(){
        for(int i = 0 ; i < restaurante.getAlmacen().getInventario().size() ; i++ ){
            if(restaurante.getAlmacen().getInventario().get(i).getCategoria().equals(categoria))
                productos.add(restaurante.getAlmacen().getInventario().get(i)) ;
        }
        matrix = new String[productos.size()][3] ;
        //System.out.println(productos.size());
        for( int i = 0 ; i < productos.size() ; i++){
            int j = i+1 ;
            matrix[i][0] = Integer.toString(j) ;
            matrix[i][1] = productos.get(i).nombre ;
            matrix[i][2] = Integer.toString(productos.get(i).cantidad) ;
            //matrix[i][3] = Integer.toString(aa) + Integer.toString(mm) + Integer.toString(dd) ;
            //matrix[i][3] = productos.get(i).getFechaVencimiento().toString() ;
        }
        
        //matrix[this.item-1][2] = Integer.toString(this.cantidad) ;
        //matrix[this.item-1][3] = Integer.toString(aa) + Integer.toString(mm) + Integer.toString(dd) ;    
        
        TablaIngreso.setModel(new javax.swing.table.DefaultTableModel(
            matrix,
            new String [] {
                "# item", "Nombre", "Cantidad a Ingresar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonColoredAction6 = new org.edisoncor.gui.button.ButtonColoredAction();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaIngreso = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        seleccionCategoria = new javax.swing.JComboBox<>();
        buttonColoredAction7 = new org.edisoncor.gui.button.ButtonColoredAction();
        buttonColoredAction8 = new org.edisoncor.gui.button.ButtonColoredAction();
        jLabel3 = new javax.swing.JLabel();
        itemtxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cantidadtxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        aaaatxt = new javax.swing.JTextField();
        mmtxt = new javax.swing.JTextField();
        ddtxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        valorFacturatxt = new javax.swing.JTextField();
        aaaafactxt = new javax.swing.JTextField();
        mmfactxt = new javax.swing.JTextField();
        ddfactxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calisto MT", 1, 36)); // NOI18N
        jLabel1.setText("Ingreso de pedido");

        buttonColoredAction6.setBackground(new java.awt.Color(204, 255, 255));
        buttonColoredAction6.setForeground(new java.awt.Color(0, 0, 0));
        buttonColoredAction6.setText("< Volver");
        buttonColoredAction6.setColorDeSombra(new java.awt.Color(204, 255, 255));
        buttonColoredAction6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColoredAction6ActionPerformed(evt);
            }
        });

        TablaIngreso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "# item", "Nombre", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TablaIngreso.setRowHeight(20);
        TablaIngreso.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                TablaIngresoInputMethodTextChanged(evt);
            }
        });
        TablaIngreso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TablaIngresoPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(TablaIngreso);

        jLabel2.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel2.setText("CategorÃ­a");

        seleccionCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Abarrotes", "Carnes", "LacteosGranja", "BebidasAlcoholicas", "BebidasNoAlcoholicas", "Fruver" }));
        seleccionCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionCategoriaActionPerformed(evt);
            }
        });

        buttonColoredAction7.setBackground(new java.awt.Color(204, 255, 255));
        buttonColoredAction7.setForeground(new java.awt.Color(0, 0, 0));
        buttonColoredAction7.setText("Actualizar Tabla");
        buttonColoredAction7.setColorDeSombra(new java.awt.Color(204, 255, 255));
        buttonColoredAction7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColoredAction7ActionPerformed(evt);
            }
        });

        buttonColoredAction8.setBackground(new java.awt.Color(204, 255, 255));
        buttonColoredAction8.setForeground(new java.awt.Color(0, 0, 0));
        buttonColoredAction8.setText("Confirmar Ingreso");
        buttonColoredAction8.setColorDeSombra(new java.awt.Color(204, 255, 255));
        buttonColoredAction8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonColoredAction8ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel3.setText("# item");

        itemtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemtxtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel4.setText("Cantidad");

        cantidadtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadtxtActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel5.setText("Vencimiento");

        aaaatxt.setText("aaaa");
        aaaatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aaaatxtActionPerformed(evt);
            }
        });

        mmtxt.setText("mm");
        mmtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmtxtActionPerformed(evt);
            }
        });

        ddtxt.setText("dd");
        ddtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddtxtActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Calisto MT", 1, 24)); // NOI18N
        jLabel6.setText("Factura");

        jLabel7.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel7.setText("Valor");

        jLabel8.setFont(new java.awt.Font("Calisto MT", 0, 24)); // NOI18N
        jLabel8.setText("Vencimiento");

        valorFacturatxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorFacturatxtActionPerformed(evt);
            }
        });

        aaaafactxt.setText("aaaa");
        aaaafactxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aaaafactxtActionPerformed(evt);
            }
        });

        mmfactxt.setText("mm");
        mmfactxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmfactxtActionPerformed(evt);
            }
        });

        ddfactxt.setText("dd");
        ddfactxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddfactxtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(21, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonColoredAction6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(buttonColoredAction8, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(seleccionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(buttonColoredAction7, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(aaaatxt)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(mmtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ddtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(itemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cantidadtxt)))
                        .addContainerGap(42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aaaafactxt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mmfactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ddfactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(valorFacturatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(seleccionCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(cantidadtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(aaaatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mmtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ddtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addComponent(buttonColoredAction7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel6)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(valorFacturatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addComponent(jLabel8))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(aaaafactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mmfactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ddfactxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonColoredAction8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(buttonColoredAction6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonColoredAction6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColoredAction6ActionPerformed
        // TODO add your handling code here:
        this.hide();
            try {
                new MateriaPrima(restaurante).setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(IngresoPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_buttonColoredAction6ActionPerformed

    private void seleccionCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionCategoriaActionPerformed
        // TODO add your handling code here:
        String nombreCategoria = (String) seleccionCategoria.getSelectedItem() ;
        if(nombreCategoria.equals("Abarrotes")){
            categoria = Categoria.abarrotes ;
            proveedor = restaurante.proveedorAbarrotes ;
        }
        if(nombreCategoria.equals("Carnes")){
            categoria = Categoria.carnes ;
            proveedor = restaurante.proveedorCarnes ;
        }
        if(nombreCategoria.equals("LacteosGranja")){
            categoria = Categoria.lacteosGranja ;
            proveedor = restaurante.proveedorLacteosGranja ;
        }
        if(nombreCategoria.equals("BebidasAlcoholicas")){
            categoria = Categoria.bebidasAlcoholicas ;
            proveedor = restaurante.proveedorBebidasAlcoholicas ;
        }
        if(nombreCategoria.equals("BebidasNoAlcoholicas")){
            categoria = Categoria.bebidasNoAlcoholicas ;
            proveedor = restaurante.proveedorBebidasNoAlcoholicas ;
        }
        if(nombreCategoria.equals("Fruver")){
            categoria = Categoria.fruver ;
            proveedor = restaurante.proveedorFruver ;
        }
        //System.out.println(categoria.toString());
        
    }//GEN-LAST:event_seleccionCategoriaActionPerformed

    private void buttonColoredAction7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColoredAction7ActionPerformed
        // TODO add your handling code here:
        if(!itemtxt.getText().toString().isEmpty()){
        try{
        
        this.item = Integer.parseInt(itemtxt.getText())-1 ;
        this.cantidad = Integer.parseInt(cantidadtxt.getText()) ;
        this.productos.get(item).cantidad += cantidad ;
        //matrix[this.item][2] = Integer.toString(this.cantidad) ;
        this.aa = Integer.parseInt(aaaatxt.getText()) ;
        this.mm = Integer.parseInt(mmtxt.getText()) ;
        this.dd = Integer.parseInt(ddtxt.getText()) ;
        this.productos.get(item).setFechaVencimiento(LocalDateTime.of(aa, mm, dd, 0, 0));
        this.ingreso.add(this.productos.get(item)) ;
        }
        catch( NumberFormatException ex ){
            System.out.println("NumberFormatException");
        }
        catch( ArrayIndexOutOfBoundsException ex){
            System.out.println("ArrayIndexOutOfBoundsException");
        }
        catch(NullPointerException ex){
            System.out.println("NullPointerException");
        }
        }
        //System.out.println(this.item + " " + this.cantidad);
        //System.out.println(matrix[this.item][2]);
        actualizarTabla();
    }//GEN-LAST:event_buttonColoredAction7ActionPerformed

    private void buttonColoredAction8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonColoredAction8ActionPerformed
        // TODO add your handling code here:
        restaurante.setEntradaProductos(ingreso);
        boolean f = false ;
        try{
            aaf = Integer.parseInt(aaaafactxt.getText()) ;
            mmf = Integer.parseInt(mmfactxt.getText()) ;
            ddf = Integer.parseInt(ddfactxt.getText()) ;
            valorFactura = Double.parseDouble(valorFacturatxt.getText());
            f = restaurante.getAlmacen().addFactura(LocalDateTime.of(aaf, mmf, ddf, 0, 0), valorFactura, proveedor) ;
        }
        catch (DateTimeException ex){
            System.out.println("DateTimeException");
        }
        if(f){
            restaurante.getAlmacen().setMoverRobotentrada(true);
            this.hide();
            try {
                new MateriaPrima(restaurante).setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(IngresoPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_buttonColoredAction8ActionPerformed

    private void aaaatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aaaatxtActionPerformed
        // TODO add your handling code here:
        this.aa = Integer.parseInt(aaaatxt.getText()) ;
    }//GEN-LAST:event_aaaatxtActionPerformed

    private void itemtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemtxtActionPerformed
        // TODO add your handling code here:
        this.item = Integer.parseInt(itemtxt.getText()) ;
        //System.out.println("item " + this.item);
    }//GEN-LAST:event_itemtxtActionPerformed

    private void cantidadtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadtxtActionPerformed
        // TODO add your handling code here:
        this.cantidad = Integer.parseInt(cantidadtxt.getText()) ;
        //System.out.println("cantidad " + this.cantidad);
    }//GEN-LAST:event_cantidadtxtActionPerformed

    private void mmtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmtxtActionPerformed
        // TODO add your handling code here:
        this.mm = Integer.parseInt(mmtxt.getText()) ;
    }//GEN-LAST:event_mmtxtActionPerformed

    private void ddtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddtxtActionPerformed
        // TODO add your handling code here:
        this.dd = Integer.parseInt(ddtxt.getText()) ;
    }//GEN-LAST:event_ddtxtActionPerformed

    private void TablaIngresoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TablaIngresoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaIngresoPropertyChange

    private void TablaIngresoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_TablaIngresoInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_TablaIngresoInputMethodTextChanged

    private void valorFacturatxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorFacturatxtActionPerformed
        // TODO add your handling code here:
        this.valorFactura = Double.parseDouble(valorFacturatxt.getText()) ;
    }//GEN-LAST:event_valorFacturatxtActionPerformed

    private void aaaafactxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aaaafactxtActionPerformed
        // TODO add your handling code here:
        this.aaf = Integer.parseInt(aaaafactxt.getText()) ;
        System.out.println("anio " + aaf);
    }//GEN-LAST:event_aaaafactxtActionPerformed

    private void mmfactxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmfactxtActionPerformed
        // TODO add your handling code here:
        this.mmf = Integer.parseInt(mmfactxt.getText()) ;
        System.out.println("mes " + mmf);
    }//GEN-LAST:event_mmfactxtActionPerformed

    private void ddfactxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddfactxtActionPerformed
        // TODO add your handling code here:
        this.ddf = Integer.parseInt(ddfactxt.getText()) ;
        System.out.println("dia " + ddf);
    }//GEN-LAST:event_ddfactxtActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(IngresoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(IngresoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(IngresoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(IngresoPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new IngresoPedido().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaIngreso;
    private javax.swing.JTextField aaaafactxt;
    private javax.swing.JTextField aaaatxt;
    private org.edisoncor.gui.button.ButtonColoredAction buttonColoredAction6;
    private org.edisoncor.gui.button.ButtonColoredAction buttonColoredAction7;
    private org.edisoncor.gui.button.ButtonColoredAction buttonColoredAction8;
    private javax.swing.JTextField cantidadtxt;
    private javax.swing.JTextField ddfactxt;
    private javax.swing.JTextField ddtxt;
    private javax.swing.JTextField itemtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mmfactxt;
    private javax.swing.JTextField mmtxt;
    private javax.swing.JComboBox<String> seleccionCategoria;
    private javax.swing.JTextField valorFacturatxt;
    // End of variables declaration//GEN-END:variables

    public ButtonColoredAction getButtonColoredAction6() {
        return buttonColoredAction6;
    }

    public JLabel getjLabel1() {
        return jLabel1;
    }

    public JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    public JTable getjTable1() {
        return TablaIngreso;
    }

    public static int getEXIT_ON_CLOSE() {
        return EXIT_ON_CLOSE;
    }

    public static int getDEFAULT_CURSOR() {
        return DEFAULT_CURSOR;
    }

    public static int getCROSSHAIR_CURSOR() {
        return CROSSHAIR_CURSOR;
    }

    public static int getTEXT_CURSOR() {
        return TEXT_CURSOR;
    }

    public static int getWAIT_CURSOR() {
        return WAIT_CURSOR;
    }

    public static int getSW_RESIZE_CURSOR() {
        return SW_RESIZE_CURSOR;
    }

    public static int getSE_RESIZE_CURSOR() {
        return SE_RESIZE_CURSOR;
    }

    public static int getNW_RESIZE_CURSOR() {
        return NW_RESIZE_CURSOR;
    }

    public static int getNE_RESIZE_CURSOR() {
        return NE_RESIZE_CURSOR;
    }

    public static int getN_RESIZE_CURSOR() {
        return N_RESIZE_CURSOR;
    }

    public static int getS_RESIZE_CURSOR() {
        return S_RESIZE_CURSOR;
    }

    public static int getW_RESIZE_CURSOR() {
        return W_RESIZE_CURSOR;
    }

    public static int getE_RESIZE_CURSOR() {
        return E_RESIZE_CURSOR;
    }

    public static int getHAND_CURSOR() {
        return HAND_CURSOR;
    }

    public static int getMOVE_CURSOR() {
        return MOVE_CURSOR;
    }

    public static int getNORMAL() {
        return NORMAL;
    }

    public static int getICONIFIED() {
        return ICONIFIED;
    }

    public static int getMAXIMIZED_HORIZ() {
        return MAXIMIZED_HORIZ;
    }

    public static int getMAXIMIZED_VERT() {
        return MAXIMIZED_VERT;
    }

    public static int getMAXIMIZED_BOTH() {
        return MAXIMIZED_BOTH;
    }

    public static float getTOP_ALIGNMENT() {
        return TOP_ALIGNMENT;
    }

    public static float getCENTER_ALIGNMENT() {
        return CENTER_ALIGNMENT;
    }

    public static float getBOTTOM_ALIGNMENT() {
        return BOTTOM_ALIGNMENT;
    }

    public static float getLEFT_ALIGNMENT() {
        return LEFT_ALIGNMENT;
    }

    public static float getRIGHT_ALIGNMENT() {
        return RIGHT_ALIGNMENT;
    }

    public static int getDO_NOTHING_ON_CLOSE() {
        return DO_NOTHING_ON_CLOSE;
    }

    public static int getHIDE_ON_CLOSE() {
        return HIDE_ON_CLOSE;
    }

    public static int getDISPOSE_ON_CLOSE() {
        return DISPOSE_ON_CLOSE;
    }

    
    public static int getWIDTH() {
        return WIDTH;
    }

    public static int getHEIGHT() {
        return HEIGHT;
    }

    public static int getPROPERTIES() {
        return PROPERTIES;
    }

    public static int getSOMEBITS() {
        return SOMEBITS;
    }

    public static int getFRAMEBITS() {
        return FRAMEBITS;
    }

    public static int getALLBITS() {
        return ALLBITS;
    }

    public static int getERROR() {
        return ERROR;
    }

    public static int getABORT() {
        return ABORT;
    }





}
